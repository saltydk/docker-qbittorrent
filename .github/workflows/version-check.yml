name: version-check

on:
  workflow_dispatch:
  schedule:
    - cron:  '0 */6 * * *'

jobs:
  find-latest-release:
    runs-on: ubuntu-latest
    outputs:
      qbt-libtorrent2-version: ${{ steps.set-latest-libtorrent2-version.outputs.qbt-libtorrent2-version }}
      qbt-libtorrent1-version: ${{ steps.set-latest-libtorrent1-version.outputs.qbt-libtorrent1-version }}
      qbt-legacy-version: ${{ steps.set-latest-legacy-version.outputs.qbt-legacy-version }}
    steps:
      - id: set-latest-libtorrent2-version
        run: echo "::set-output name=qbt-libtorrent2-version::$(curl -sL https://github.com/userdocs/qbittorrent-nox-static/releases/latest/download/dependency-version.json | jq -r '. | "release-\(.qbittorrent)_v\(.libtorrent_2_0)"')"
      - id: set-latest-libtorrent1-version
        run: echo "::set-output name=qbt-libtorrent1-version::$(curl -sL https://github.com/userdocs/qbittorrent-nox-static/releases/latest/download/dependency-version.json | jq -r '. | "release-\(.qbittorrent)_v\(.libtorrent_1_2)"')"
      - id: set-latest-legacy-version
        run: echo "::set-output name=qbt-legacy-version::$(curl -sL https://github.com/userdocs/qbittorrent-nox-static-legacy/releases/latest/download/dependency-version.json | jq -r '. | "release-\(.qbittorrent)_v\(.libtorrent_1_2)"')"

  update-libtorrent2:
    runs-on: ubuntu-latest
    needs: find-latest-release
    steps:
    - uses: actions/checkout@v2
      with:
        persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
        fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
        ref: libtorrent2
    - name: Create local changes
      run: |
        [ ! -z "$QBT_VERSION" ] && [[ "$QBT_VERSION" != "null" ]] && sed -i 's/.*ARG QBITTORRENT_RELEASE=.*/ARG QBITTORRENT_RELEASE="'${QBT_VERSION}'"/' Dockerfile
      env:
        QBT_VERSION: ${{ needs.find-latest-release.outputs.qbt-libtorrent2-version }}
    - name: Commit files
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git commit -m "Update to ${{ needs.find-latest-release.outputs.qbt-libtorrent2-version }}" -a || echo "Nothing to update"
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GH_TOKEN }}
        branch: libtorrent2

  update-libtorrent1:
    runs-on: ubuntu-latest
    needs: find-latest-release
    steps:
    - uses: actions/checkout@v2
      with:
        persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
        fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
        ref: libtorrent1
    - name: Create local changes
      run: |
        [ ! -z "$QBT_LIBTORRENT1_VERSION" ] && [[ "$QBT_LIBTORRENT1_VERSION" != "null" ]] && sed -i 's/.*ARG QBITTORRENT_RELEASE=.*/ARG QBITTORRENT_RELEASE="'${QBT_LIBTORRENT1_VERSION}'"/' Dockerfile
      env:
        QBT_LIBTORRENT1_VERSION: ${{ needs.find-latest-release.outputs.qbt-libtorrent1-version }}
    - name: Commit files
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git commit -m "Update to ${{ needs.find-latest-release.outputs.qbt-libtorrent1-version }}" -a || echo "Nothing to update"
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GH_TOKEN }}
        branch: libtorrent1

  update-legacy:
    runs-on: ubuntu-latest
    needs: find-latest-release
    steps:
    - uses: actions/checkout@v2
      with:
        persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
        fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
        ref: legacy
    - name: Create local changes
      run: |
        [ ! -z "$QBT_LEGACY_VERSION" ] && [[ "$QBT_LEGACY_VERSION" != "null" ]] && sed -i 's/.*ARG QBITTORRENT_RELEASE=.*/ARG QBITTORRENT_RELEASE="'${QBT_LEGACY_VERSION}'"/' Dockerfile
      env:
        QBT_LEGACY_VERSION: ${{ needs.find-latest-release.outputs.qbt-legacy-version }}
    - name: Commit files
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git commit -m "Update to ${{ needs.find-latest-release.outputs.qbt-legacy-version }}" -a || echo "Nothing to update"
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GH_TOKEN }}
        branch: legacy
